让我们从进程线程说起。
    进程：CPU资源（内存，cpu）分配的最小单位（拥有资源，独立运行）
    线程：CPU调度的最小单元（是建立在进程基础上的一次程序运行）

    对于操作系统来说，每个应用就是一个进程，
    进程之间互不干扰，一个进程可以拥有一个以上的线程，线程之间可以各自运行，也可以合作。一个进程里的资源各线程可以互相访问

现代浏览器为多进程浏览器，充分发挥CPU多核特点
    主进程：负责浏览器的显示与交互，tab标签的管理，网络资源管理，下载等，以及创建销毁其他线程
    三方插件进程：每种类型的插件对应一个进程，使用时创建
    GPU进程：只有一个，用于3D绘制
    渲染进程 （JS引擎主线程、事件触发线程、定时器触发线程、异步请求线程、GUI渲染线程）：又叫浏览器内核
        GUI渲染线程：
          负责解析HTML和CSS，构建DOM树，RenderObject树，布局等。
        JS引擎线程：
          解析、执行JS，也叫JS内核，V8就是一个JS引擎。一个Tab页同时只有一个JS线程
          注意：JS执行会阻塞GUI渲染，可能会导致页面渲染不连贯。
        事件触发线程：
          事件循环的控制者，执行代码例如 setTimeout 时，把代码以及相关变量进行处理后，加载到任务队列，等待执行
          注意：因为单线程的关系，任务队列需要等到，执行栈为空时才会去执行
        定时器触发线程以及异步请求和上述过程一致。


    一些问题：
      JS为什么是单线程的？
      因为JS诞生的主要职责是对DOM树做一些交互，而如果我们有一个更新和删除的操作在多线程同时运行，这样就会导致UI操作冲突，当然可以通过锁来解决这个问题
    但是，JS设计初衷是一个简单的脚本语言
      
